<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.demo.EmpMapper">

	<!-- id는 interface의 메서드명과 동일하게 한다. -->
	<!-- 엘리어스 지정해주면 get해서 호출할 때 편리 -->
	<select id="getEmp" resultType="EmpVO">
		SELECT *
		FROM employees
		WHERE EMPLOYEE_ID=#{employeeId}
	</select>
	<select id="getEmpList" parameterType="EmpReqVO" resultType="EmpVO">
		SELECT *
		FROM employees
		<where>
			<if test="employeeId != null and employeeId != ''">
				employee_id = #{employeeId}
			</if>
<!--  		 	<if test="depts != null and depst != ''">
				<foreach collection="depts" item="dept">
					and department_id#{dept}
				</foreach>
			</if> -->
			<if test="jobId != null and jobId != ''">
				and job_id = #{jobId}
			</if>
			<if test="sdt != null">
				and hire_date >= #{sdt}
			</if>
			<if test="edt != null">
				and hire_date <![CDATA[<= #{edt}]]>
			</if>
		</where>
		ORDER BY employee_id
	</select>
	<insert id="insert" parameterType="EmpVO">
		<selectKey keyProperty="employeeId" order="BEFORE" resultType="string">
			SELECT NVL(max(employee_id),0)+1 FROM employees
		</selectKey>
		INSERT INTO 
			employees(employee_id,first_name, last_name, email, hire_date, job_id)
		VALUES (#{employeeId},#{firstName},#{lastName},#{email},#{hireDate},#{jobId})
	</insert>
	<update id="update" parameterType="EmpVO">
		UPDATE employees
		SET first_name = #{firstName},
			last_name = #{lastName},
			email = #{email},
			hire_date = #{hireDate},
			job_id = #{jobId}
		WHERE employee_id = #{employeeId}
	</update>
	<delete id="delete" parameterType="EmpVO">
		DELETE FROM employees
		WHERE employee_id = #{employeeId}
	</delete>
	
	<!-- 부서리스트 -->
	<select id="getDepartments" 
			resultType="DepartmentVO">
		select * 
			from departments
		order by department_id
	</select>

	<!-- 직무리스트 -->	
	<select id="getJobs" resultType="JobVO">
		select * 
			from jobs 
		order by job_id
	</select>
	
	
	
</mapper>